#! /bin/sh

destination="$1"
# memory_limit="$2"
shift 2
main_source="$1"

# Check for '#!' interpreter line: don't allow it to prevent teams from passing options to the interpreter.
if grep '^#!' "$main_source" >/dev/null 2>&1 ; then
    echo "Error: interpreter statement(s) found:"
    grep -n '^#!' "$main_source"
    exit 1
fi

# Write executing script:
cat > "$destination" <<EOF
#!/bin/sh
# Generated shell-script to execute julia interpreter on source.

# Detect dirname and change dir to prevent class not found errors.
if [ "\${0%/*}" != "\$0" ]; then
    cd "\${0%/*}"
fi
HOME=$PWD JULIA_LOAD_PATH=$PWD LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjulia.so.1 /usr/bin/julia "$main_source"
EOF
chmod a+x "$destination"
exit 0
